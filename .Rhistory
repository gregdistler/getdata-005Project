install.packages("slidify")
install.packages("ggplot2")
library(ggplot2)
search()
install.packages("KernSmooth")
library(kernsmooth)
library(Kernsmooth)
library(KernSmooth)
rep(10,4)
x <- Sys.time()
x
names(unclass(x))
p <- as.POSIXlt(x)
p
names(unclass(p))
x<-as.Date("2012-01-01")
x<-as.POSIXlet(x)
x<-as.POSIXlet(x)
x<-as.POSIXlt(x)
x
y<-strptime("9 Jan 2011 11:34:21","%d %b %Y %H:%M:%S")
x-y
y
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
temp <- makeVector()
temp[1]
temp <- makeVector(c(1,2,3,4,5))
temp
makeCacheMatrix <- function(x = matrix()) {
invM <- NULL
## this sets the value of the matrix
set <- function(y){
x<<-y
invM <<- NULL
}
## get value of matrix
get <- function() x
setinverse <- function(solve) invM <<- solve
getinverse <- function() invM
list(set = set, get = get, setinverse = setinverse,
getinverse = getinverse)
}
temp <- makeCacheMatrix
temp
temp <- makeCacheMatrix()
temp
setwd("/Users/gregdistler/getdata-005Project")
## read in the test data
subtest <- read.table("data/UCI HAR Dataset/test/subject_test.txt")
xtest <- read.table("data/UCI HAR Dataset/test/X_test.txt")
ytest <- read.table("data/UCI HAR Dataset/test/Y_test.txt")
## read in the training data
subtrain <- read.table("data/UCI HAR Dataset/train/subject_train.txt")
xtrain <- read.table("data/UCI HAR Dataset/train/X_train.txt")
ytrain <- read.table("data/UCI HAR Dataset/train/Y_train.txt")
actlabels <- read.table("data/UCI HAR Dataset/activity_labels.txt")
features <- read.table("data/UCI HAR Dataset/features.txt")
##row bind the data
allX <- rbind(xtest,xtrain)
allSubj <-rbind(subtest,subtrain)
allY <- rbind(ytest,ytrain)
names(allX)<-features[,2]
names(allSubj)<-"Subject"
names(allY) <- "Activity_ID"
names(actlabels) <- c("ID","Activity")
##now find features with just mean() and std()
meanInds <- grep("mean()",features[,2])
stdInds <- grep("std()",features[,2])
bothInds <- sort(union(meanInds,stdInds))
allX_2 <- allX[,bothInds]
##column bind
AllData_NoAct <- cbind(allX_2,allSubj)
AllData_NoAct <- cbind(AllData_NoAct,allY)
##now merge data
AllData_Act <- merge(AllData_NoAct,actlabels,by.x = "Activity_ID",by.y = "ID",all=TRUE)
head(AllData_Act)
Final_Means <- aggregate(AllData_Act[2:80],list(AllData_Act$Subject,AllData_Act$Activity),FUN = mean,na.rm=TRUE)
names(Final_Means)[1] <- "Subject"
names(Final_Means)[2] <- "Activity"
write.table(Final_Means,"Final_Tidy_Means.txt")
